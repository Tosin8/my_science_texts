- APIs, or Application Programming Interfaces, provide a manner in which software applications communicate with each other. 

- They define the methods and data formats an application should use in order to perform tasks, like sending, retrieving, or modifying data.

THE BASICS..........
Application Programming Interfaces (APIs) are an integral part of modern development, allowing software applications to communicate and use functions from other software applications or services

HTTP Versions in API Design
___________________________________
The versions specify how versions should respond to commands, which directly impacts how well an API can communicate with other software and systems. 

HTTP Methods
___________________
It plays a significant role in API design, defining the type of request a client can make to a server. 
Common methods are: GET, POSt, PUT, DELETE and PATCH, allowing various interactions with API endpoints. 

HTTP Status Codes
_________________________
They are an essential part of API Design, providing important information about the result of a request made to a server. 
eg. 404 - signifies that a request resource could not be found on the server, 200 - for a successful HTTP request. 

________________________
HTTP Headers 

HTTP Headers play a crucial role in API Design as they provide essential information between the client and server regarding the data to be exchanged. 

Cookies
_______________
Cookies play an instrumental role in the field of API (Application Programming Interface) design. Essentially, cookies are small bits of data stored on a user’s browser that enables stateful HTTP sessions, by storing pertinent information between server communications. 

CORS under API design
CROSS-ORIGIN RESOURCE SHARING - It's a mechanism that uses HTTP headers to tell browsers to give a web application running at one origin, access to selected resources from a different origin. 
By default, web browsers prohibit web pages from making requests to a different domain than the one the web page came from. 

CORS IS THE GUIDELINE THAT LETS YOU CONFIGURE A SET OF RULES ON THE SERVER TO DEFINE WHICH TYPES OF CROSS-DOMAIN REQUESTS ARE ALLOWED, PROVIDING MUCH-NEEDED FLEXIBILITY WITHOUT COMPROMISING SECURITY. 
Understanding CORS is crucial in designing APIs that ensure safe and effective inter-domain communication. 

HTTP Caching in API Design 
__________________________________
Caching is a key apsect of API design which involves storing copies of responses to HTTP requests to speed up future requests. 
When an API receives the same request multiple times, instead of processing each request separately, it can use a previously stored response, thereby improving performance and efficiency. The cache is governed by headers on the HTTP requests and responses. Understanding and implementing HTTP caching in API design can drastically reduce latency, network traffic and improve the speed of an API.

Difference between Cookie and Cache
_______________________________________
Cookies are typically stored on the device's hard drive. These encrypted files are accessed using the web browser that stored them or dedicated web applications. Cache files are stored in the computer's RAM (Random Access Memory) for faster access, providing near-instantaneous retrieval of data in nanoseconds. 

Understand TCP/IP
______________________________
TCP: Transmission Control Prootocol
IP: Internet Protocol

TCP/IP, standing for Transmission Control Protocol/Internet Protocol, is the suite of communications protocols used to connect hosts on the Internet. It provides ordered, error-checked delivery of streams of bytes from a program on one computer to another program on another computer. If you want to understand how APIs communicate over networks, knowing the fundamental workings of TCP/IP is indispensable.

Basics of DNS
_____________________________
Domain Name System: It plays a fundamental role in the way APIs function, acting as the internet's equivalent of a phone book, interpreting human-friendly hostnames into IP addresses that APIs needs for communication. 
knowledge about DNS can significantly aid in troubleshooting connectivity issues, ensuring secure connections, and optimizing API architecture with more efficient calls.

REST Principles. 
_________________________________-
REST: Representational State Transfer - it defines a set of rules and conventions through which systems communicate over a network. 
Key Characteristics are: 
- Statelessness
- Client-Server Communication
- Cacheability
- Uniform Interface. 
The principles revolve around resources and their manipulation to achieve desired outcomes, making developers to ensure that their API design in line with web standards, and improving interoperability across different systems. 

URI Design in API
_______________________________

URI - Uniform Resource Identifier, a string of characters used to identify a name or a resource on the internet. It ensures that related resources are grouped together in a logical manner and can greately impact the usability and maintainability of an API. 

Version Strategies
________________________________
As the APIs evolve over time to meet the new business requirements and functionality enhancements, it is crucial to manage the changes in a way that doesn't break the existing client applications. 


Handling CRUD Operations in API Design
_____________________________________________________
CRUD operations: Create, Read, Update and Delete Operations. 


Building JSON/ RESTful APIs
____________________________________-
Building JSON/RESTful APIs involves designing and implementing APIs taht adhere to othe architectural constraints of REST.
These APIs use JSON (JavaScript Object Notation) as a format for information interchange, due to its lightweight, easy-to-understand, and universally accepted nature. A well-designed RESTful API, utilizing JSON, is key in developing applications that are scalable, maintainable, and easily integrated with other systems. This design approach enables the resources on a server to be accessed and manipulated using standard HTTP protocols, facilitating communication between different services and systems.


Simple JSON APIs
____________________________________--
Simple JSON (JavaScript Object Notation) APIs are a popular form of API or “Application Programming Interface” which utilises JSON to exchange data between servers and web applications. 

This method has gained prominence mainly for its simplicity, light weight, and easy readability. In the context of API design, a well-structured JSON API allows developers to efficiently interact with the backend and retrieve only the data they need in a consistent and comprehensible manner. From reducing redundant data to enabling quick parsing, Simple JSON APIs provide numerous benefits to improve the overall performance of applications.
