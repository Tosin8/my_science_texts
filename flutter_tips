
 THE ARCHITECTURE OF FLUTTER APPLICATION
  a. In Flutter, everything is a widget. 
  b. Gestures: GestureDectector is an invisible widget with the ability to capture user interactions such as tapping, dragging, etc. 
  c. Concept of State: Flutter widgets support state maintenance by providing a special widget, statefulwidget. The widget needs to be derived from the StatefulWidget widget to support state maintenance. Flutter widgets are REACTIVE in native. 
"Reactive programming is a programming paradigm that is widely used in mobile applications. In classical programming, when we want some kind of information, we actively request it. This can be from a database, an API, or a sensor. What we do is ask the data source for the specific information that we need. 
In Flutter, reactive programming is implemented using Streams and Observers. A Stream is the constant stream of data that is changing. It can be the data from the database or a server every time a certain value is modified, or a sensor when it updates the value. An Observer is the component that subscribes to the Stream and receives change notifications from the stream. The Observer subscribes when it wants to get data and can unsubscribe when it’s not interested in the information."
  d. Layers: The most important concept of the Flutter framework is that it is grouped into multiple categories in terms of complexity and clearly arranged in layers of decreasing complexity. 

FLUTTER STATE MGT BASICS: CODE WITH ANDREA
 * State : whatever data you need in order to rebuild UI at any moment in time, while UI is how the application looks like. 

There are two kinds of state: 
    - local or ephemeral state ( a state is self-contained inside a single widget ) and 
    - global/shared state. Example: using InheritedWidget to share data across widget prefered to use Provider instead. 
         * Flutter using ChangeNotifier and ValueNotifier to store state outside the widget. 
         * StreamBuilder and FutureBuilder : useful with asynchronous APIs , and building this thing requires: 
                 4 states - which are: data, no data, error and loading. 

Flutter – Animation
The aspect of animations are: 
1. Animation have two distinct values
2. the intermediate values may be linear or non linear in nature and can be configued
3. The duration of the animation process affects the speed of the animation
4. The ability to control the animation process
5. The ability to provide values required  at every frame to render the images. 
